import{f as _,h as S,w as $,o as x,a as b,b as n,u as y,t as k,i as L,j as I,e as f,p as P,k as R}from"./entry.fbdd494c.js";const U=""+new URL("Spotify_Logo_White.ef7c01a4.svg",import.meta.url).href,B=""+new URL("Github_Logo_Black.2d65077f.svg",import.meta.url).href;function A(e){const t=new ArrayBuffer(4);return new DataView(t).setUint32(0,e,!1),t}function j(e){const t=_.exports.lib.WordArray.random(e),a=[];return t.words.forEach(c=>{const r=A(c),s=new Uint8Array(r);for(let d=0;d<4;d++)a.push(s[d])}),a}function T(e){const t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~";let a="";const c=j(e);for(let r=0;r<e;r++){const s=c[r]%t.length;a+=t[s]}return a}function V(e){return T(e)}function C(e){return _.exports.SHA256(e).toString(_.exports.enc.Base64url)}function W(e){if(e||(e=43),e<43||e>128)throw`Expected a length between 43 and 128. Received ${e}.`;const t=V(e),a=C(t);return{code_verifier:t,code_challenge:a}}const p=e=>(P("data-v-7d0da4bd"),e=e(),R(),e),D={class:"pageContainer"},H={class:"pageBody"},E=p(()=>n("div",null,[n("h1",{class:"flex justify-center text-xl font-bold"},"What Am I Listening To?"),n("h2",{class:"flex justify-center"},"Analyze your listening habits")],-1)),G={class:"flex flex-col items-center"},J=p(()=>n("img",{src:U,alt:"Spotify Logo",class:"h-10"},null,-1)),N=p(()=>n("span",{class:"pl-2 text-[25px]"},"login",-1)),z=[J,N],O=p(()=>n("span",{class:"flex items-center"},"Secured by OAuth2.0",-1)),K={key:0},q=I('<div class="flex flex-col items-center" data-v-7d0da4bd><button class="bg-purple px-4 py-2 h-min rounded-lg flex flex-row items-center font-bold" data-v-7d0da4bd><img src="'+B+'" alt="GitHub Logo" class="h-8" data-v-7d0da4bd><span class="pl-2 text-[20px]" data-v-7d0da4bd>GitHub repo</span></button><span class="text-center w-full" data-v-7d0da4bd>Developled by <br data-v-7d0da4bd> Benjamin Tallarek, Julius J\xE4nchen, Konstantin Lobmayr, Pascal Heyn, Robin Walter</span></div>',1),F={__name:"login",async setup(e){let t,a;const c="20aa48c2719e42c0be5f3b834942f06d",r=[],s=new URL(window.location);s.search="";async function d(){const i=W();localStorage.setItem("code-verifier",i.code_verifier);const o=new URL("/authorize","https://accounts.spotify.com/");o.searchParams.append("client_id",c),o.searchParams.append("response_type","code"),o.searchParams.append("redirect_uri",s),o.searchParams.append("scopes",r.join(" ")),o.searchParams.append("code_challenge_method","S256"),o.searchParams.append("code_challenge",i.code_challenge),f(o.toString(),{external:!0})}async function w(){const i=localStorage.getItem("code-verifier"),o=new URL("/api/token","https://accounts.spotify.com/"),g={grant_type:"authorization_code",code:h,redirect_uri:s,client_id:c,code_verifier:i},l=await(await fetch(o,{method:"POST",body:new URLSearchParams(g),headers:{"Content-Type":"application/x-www-form-urlencoded"}})).json();if(l.error){const v=new URL(s);v.searchParams.append("error",l.error),f(v)}else localStorage.setItem("auth-token",l.access_token),localStorage.setItem("refresh-token",l.refresh_token),localStorage.setItem("auth-token-expiration-timestamp",Date.now()+l.expires_in),localStorage.removeItem("code-verifier"),f("/")}const u=new URLSearchParams(window.location.search),m=u.get("error"),h=u.get("code");return h&&([t,a]=$(()=>w()),await t,a()),(i,o)=>(x(),b("div",D,[n("div",H,[E,n("div",G,[n("button",{onClick:o[0]||(o[0]=g=>d()),class:"bg-spotify-green px-8 py-4 h-min rounded-lg flex flex-row items-center font-bold"},z),O]),y(m)?(x(),b("p",K,k(y(m)),1)):L("",!0)]),q]))}},X=S(F,[["__scopeId","data-v-7d0da4bd"]]);export{X as default};
